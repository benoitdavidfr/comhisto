title: Schéma de comhistog3
$schema: http://json-schema.org/draft-07/schema#
$id: https://github.com/benoitdavidfr/comhisto/blob/master/export/comhistog3.schema.yaml
definitions:
  bbox: { type: array, minItems: 4, items: { type: number } }
  Feature:
    description: GeoJSON Feature
    type: object
    required: [ type, properties, geometry ]
    properties:
      type: { type: string, enum: [ Feature ] }
      id: { type: string }
      properties: { $ref: '#/definitions/properties' }
      geometry: { $ref: '#/definitions/geometry' }
      bbox: { $ref: '#/definitions/bbox' }
  properties:
    description: propriétés d'un objet de comhistog3 correspondant à une version d'entité
    type: object
    additionalProperties: false
    properties:
      type:
        description: le caractère 's' pour commune simple (BASE, ASSO ou NOUV), 'r' pour entité rattachée (COMA, COMD, ARDM)
        type: string
        enum: [s, r]
      cinsee:
        description: code Insee de la version
        $ref: '#/definitions/codeInsee'
      ddebut:
        description: date de création de la version
        $ref: '#/definitions/date'
      edebut:
        description: évènements de création de la version
        $ref: '#/definitions/evts'
      dfin:
        description: date du lendemain de la fin de la version, ou null ssi la version est valide à la date de référence du référentiel
        oneOf:
          - type: 'null'
          - $ref: '#/definitions/date'
      efin:
        description: évènements de fin de la version, ou null ssi la version est valide à la date de référence du référentiel
        oneOf:
          - type: 'null'
          - $ref: '#/definitions/evts'
      statut:
        description: statut de l'entité correspondant à la version
        enum:
          - BASE # commune de base (ni commune de rattachement, ni entité rattachée)
          - ASSO # commune de rattachement d'une association
          - NOUV # commune de rattachement d'une commune nouvelle
          - COMA # commune associée d'une association
          - COMD # commune déléguée d'une commune nouvelle
          - ARDM # arrondissement municipal
      crat:
        description: pour une entité rattachée (COMA, COMD, ARDM) code Insee de la commune de rattachement, sinon null 
        oneOf:
          - type: 'null'
          - $ref: '#/definitions/codeInsee'
      erats:
        description: pour une commune de rattachement (ASSO, NOUV) liste des codes Insee des entités rattachées, sinon liste vide
        $ref: '#/definitions/listeDeCodesInsee'
      elits:
        description: liste des éléments intemporels propres, cad associés à l'entité sans ses erats, ou null ssi il n'y en a pas
        oneOf:
          - type: 'null'
          - $ref: '#/definitions/listeDeCodesInsee'
      dnom:
        description: nom associé à la version
        type: string
  date:
    description: date encodée comme chaine au format ISO 8601
    type: string
    pattern: ^\d\d\d\d-\d\d-\d\d$
  codeInsee:
    description: code Insee encodé comme chaine ou comme entier
    type: [string, number]
    pattern: '^\d[\dAB]\d\d\d$'
  listeDeCodesInsee:
    description: liste de codes INSEE
    type: array
    items:
      $ref: '#/definitions/codeInsee'
  evts:
    description: |
      Les opérations sur les entités sont décrites par des évènements de création/modification/suppression s'appliquant
      à un code Insee ; la plupart prennent en objet un ou une liste de codes INSEE et, dans ce cas, les codes INSEE objets
      portent à la même un date un évènement appelé mirroir.
      La définition de ces types d'évènement respecte les principes suivants:
        - le nombre de types d'évènements est limité afin de faciliter la compréhension du modèle
        - l'état issu d'un évènement doit être défini par l'état précédent ainsi que les infos portées par l'évènement,
          sauf pour les changements de nom,
        - le fichier doit permettre à un humain de comprendre facilement l'évolution de(s) l'entité(s) associée(s) à un code Insee
      Certains évènements, comme mentionnés dans les commentaires, peuvent être déduits de leurs évènements mirroirs. Lorsque
      l'information déduite est absente alors l'objet de l'évènement est une liste vide.
    type: object
    additionalProperties: false
    properties:
      changeDeNomPour:
        description: le sujet change de nom avec comme objet le nouveau nom (pas d'evt. mirroir)
        type: string
      entreDansLeRéférentiel:
        description: le sujet entre dans le périmètre du référentiel (pas d'évt mirroir)
        type: 'null'
      sortDuPérimètreDuRéférentiel:
        description: le sujet sort du périmètre du référentiel, cas de Saint-Martin et Saint-Barthélémy (pas d'évt mirroir)
        type: 'null'
      changeDeCodePour:
        description: le sujet change de code, en général lors d'un chgt de dépt, avec comme objet le nouv code (mirroir avaitPourCode)
        $ref: '#/definitions/codeInsee'
      avaitPourCode:
        description: |
          le sujet est le nouveau code, en général lors d'un changement de département, avec comme objet l'ancien code
          (mirroir changeDeCodePour)
        $ref: '#/definitions/codeInsee'
      seDissoutDans:
        description: c. supprimée avec en objets les c. dans lesquelles son territoire est réparti (m. déduit de reçoitUnePartieDe)
        $ref: '#/definitions/listeDeCodesInsee'
      reçoitUnePartieDe:
        description: c. recevant une partie du territoire d'une c. supprimée avec le code de celle-ci (mirroir seDissoutDans)
        $ref: '#/definitions/codeInsee'
      crééeAPartirDe:
        description: c. créée avec liste des codes des communes dont provient son territoire (mirroir déduit de contribueA)
        $ref: '#/definitions/listeDeCodesInsee'
      contribueA:
        description: commune contribuant à la création d'une commune avec le code de la c. créée (mirroir crééeAPartirDe)
        $ref: '#/definitions/codeInsee'
      fusionneDans:
        description: |
          entité supprimée par fusion de son territoire dans une autre dont le code est en param. (mirroir absorbe).
          Le cas particulier de la fusion de 2 entités pour en créer une nouvelle est traduit par changeDeCodePour+absorbe
        $ref: '#/definitions/codeInsee'
      absorbe:
        description: entité en absorbant d'autres (mirroir déduit de fusionneDans)
        $ref: '#/definitions/listeDeCodesInsee'
      crééeCommeSimpleParScissionDe:
        description: c. simple créée par scission d'un e. existante avec son code (mirroir seScindePourCréer)
        $ref: '#/definitions/codeInsee'
      crééeCommeAssociéeParScissionDe:
        description: c. associée créée par scission d'un e. existante avec son code (mirroir seScindePourCréer)
        $ref: '#/definitions/codeInsee'
      crééCommeArrondissementMunicipalParScissionDe:
        description: arrdt municipal créé par scission d'un e. existante avec son code (mirroir seScindePourCréer)
        $ref: '#/definitions/codeInsee'
      seScindePourCréer:
        description: entité se scindant pour en créer de nouvelles avec leur code (mirroir déduit de crééeCommeXXXParScissionDe)
        $ref: '#/definitions/listeDeCodesInsee'
      estModifiéeIndirectementPar:
        description: |
          CS modifiée par un évt intervenant sur ses ER avec codes de ces ER
          Type d'évt utilisé uniquement pour la commune de Lyon à l'occasion de la fusion de la commune de Saint-Rambert-l'Île-Barbe
          dans le 5ème arrondissement de Lyon.
        $ref: '#/definitions/listeDeCodesInsee'
      sAssocieA:
        description: |
          Commune simple s'associe à une commune de rattachement (mirroir prendPourAssociées)
          La commune de rattachement objet doit être une commune simple.
          Si le sujet était auparavant rattaché à une autre CS alors il doit s'en détacher explicitement simultanément
          Si le sujet avait des ER alors elles doivent simultanément s'en détacher
          Si le sujet était mixte alors son ER est rattachée à l'objet et sa CS disparait.
        $ref: '#/definitions/codeInsee'
      prendPourAssociées:
        description: liste des associées prises par le sujet (mirroir déduit de sAssocieA)
        $ref: '#/definitions/listeDeCodesInsee'
      devientDéléguéeDe:
        description: |
          Entité devient déléguée lors de la création/évolution d'une c. nouv. avec code de cette dernière (m. prendPourDéléguées)
          La commune de rattachement objet doit être une commune simple.
          Si le sujet était rattaché à une autre CS alors il doit s'en détacher explicitement au préalable (c'est nécessaire pour
          que l'ancienne commune de ratachement sache qu'elle la détache).
          Par contre l'entité peut auparavant être associée à la même c. de rattachement.
          Si le sujet avait des ER alors elles doivent simultanément s'en détacher.
          Si le sujet était mixte alors son ER est rattachée à l'objet et la CS disparait.
        $ref: '#/definitions/codeInsee'
      prendPourDéléguées:
        description: |
          Liste des déléguées prises lors de la création/évolution d'une c. nouv. sujet (mirroir déduit de devientDéléguéeDe)
          Si la c. de ratt. et la c. déléguée ont même code alors il doit y avoir un evt devientDéléguéeDe
        $ref: '#/definitions/listeDeCodesInsee'
      seDétacheDe:
        description: c. associée ou déléguée se détache de sa c. de rattachement et devient c. simple (mirroir détacheCommeSimples)
        $ref: '#/definitions/codeInsee'
      détacheCommeSimples:
        description: c. de ratt. se sépare de certaines de ses c. associées ou déléguées comme c. simples (m. déduit de seDétacheDe)
        $ref: '#/definitions/listeDeCodesInsee'
      resteAssociéeA:
        description: c. associée le reste à l'occasion d'une évolution de l'association (mirroir gardeCommeAssociées)
        $ref: '#/definitions/codeInsee'
      gardeCommeAssociées:
        description: CS ayant des c. associées en garde certaines à l'occas. d'une évol. de l'assos (mirroir déduit de resteAssociéeA)
        $ref: '#/definitions/listeDeCodesInsee'
      resteDéléguéeDe:
        description: c. déléguée le reste à l'occasion d'une évolution des déléguées (mirroir gardeCommeDéléguées)
        $ref: '#/definitions/codeInsee'
      gardeCommeDéléguées:
        description: CS ayant des c. déléguées en garde certaines à l'occas. d'une évol. des dél. (mirroir déduit de resteDéléguéeDe)
        $ref: '#/definitions/listeDeCodesInsee'
      aucun:
        description: lorsqu'un évènement est simplifié, il peut être remplacé par un évt vide codé par aucun
        type: 'null'
  etat:
    description: |
      Etat résultant des évènements et valide à partir de la date de la version et soit, s'il y a une version suivante, jusqu'à sa
      date, soit, sinon, valide à la date de validité du référentiel. Dans le premier cas on dit que la version est périmée, dans
      le second qu'elle est valide.
    type: object
    required: [name, statut]
    properties:
      name:
        description: nom de l'entité pour cette version
        type: string
      statut:
        description: statut de l'entité
        type: string
        enum:
          - COMS # le code corresond à une commune simple
          - COMA # le code corresond à une commune associée
          - COMD # le code corresond à une commune déléguée
          - COMM # le code correspond simultanément à une commune simple et à une commune déléguée (commune mixte)
          - ARDM # le code corresond à un arrondissement municipal
      crat:
        description: code INSEE de la commune de rattachement ssi le statut est COMA, COMD ou ARDM, null sinon
        oneOf:
          - type: 'null'
          - $ref: '#/definitions/codeInsee'
      nomCommeDéléguée:
        description: ssi statut=COMM alors nom de la commune déléguée
        type: string
  erat:
    description: |
      Enregistre la liste des entités rattachées (communes associées ou déléguées, ou arrondissements municipaux) pour les communes
      simples en ayant. Ces infos sont déduites du statut et crat des entités rattachées.
      Cette propriété est absente si ces infos ne sont pas déduites.
    type: object
    properties:
      aPourAssociées:
        description: liste des c. associées déduite de statut et crat
        $ref: '#/definitions/listeDeCodesInsee'
      aPourDéléguées:
        description: liste des c. déléguées déduite de statut et crat
        $ref: '#/definitions/listeDeCodesInsee'
      aPourArdm:
        description: liste des arrondissements municipaux déduite de statut et crat
        $ref: '#/definitions/listeDeCodesInsee'
  geometry:
    oneOf:
      #- type: 'null'
      #- { $ref: '#/definitions/Point' }
      #- { $ref: '#/definitions/MultiPoint' }
      #- { $ref: '#/definitions/LineString' }
      #- { $ref: '#/definitions/MultiLineString' }
      - { $ref: '#/definitions/Polygon' }
      - { $ref: '#/definitions/MultiPolygon' }
      #- { $ref: '#/definitions/GeometryCollection' }
  pt:
    description: liste d'au moins 2 coordonnées
    type: array
    minItems: 2
    items: { type: number }
  lpt:
    description: liste de pt
    type: array
    items: { $ref: '#/definitions/pt' }
  llpt:
    description: liste de lpt
    type: array
    items: { $ref: '#/definitions/lpt' }
  lllpt:
    description: liste de llpt
    type: array
    items: { $ref: '#/definitions/llpt' }
  Point:
    description: GeoJSON Point
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [Point]}
      coordinates: { $ref: '#/definitions/pt' }
      bbox: { $ref: '#/definitions/bbox' }
  MultiPoint:
    description: GeoJSON MultiPoint
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [MultiPoint]}
      coordinates: { $ref: '#/definitions/lpt' }
      bbox: { $ref: '#/definitions/bbox' }
  LineString:
    description: GeoJSON LineString
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [LineString]}
      coordinates: { $ref: '#/definitions/lpt' }
      bbox: { $ref: '#/definitions/bbox' }
  MultiLineString:
    description: GeoJSON LineString
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [MultiLineString]}
      coordinates: { $ref: '#/definitions/llpt' }
      bbox: { $ref: '#/definitions/bbox' }
  Polygon:
    description: GeoJSON Polygon
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [Polygon]}
      coordinates: { $ref: '#/definitions/llpt' }
      bbox: { $ref: '#/definitions/bbox' }
  MultiPolygon:
    description: GeoJSON MultiPolygon
    type: object
    required: [type, coordinates]
    properties:
      type: {type: string, enum: [MultiPolygon]}
      coordinates: { $ref: '#/definitions/lllpt' }
      bbox: { $ref: '#/definitions/bbox' }
  GeometryCollection:
    description: GeoJSON GeometryCollection
    type: object
    required: [type, geometries]
    properties:
      type: {type: string, enum: [GeometryCollection]}
      geometries:
        type: array
        items:
          oneOf:
            - { $ref: '#/definitions/Point' }
            - { $ref: '#/definitions/MultiPoint' }
            - { $ref: '#/definitions/LineString' }
            - { $ref: '#/definitions/MultiLineString' }
            - { $ref: '#/definitions/Polygon' }
            - { $ref: '#/definitions/MultiPolygon' }
      bbox: { $ref: '#/definitions/bbox' }
    
type: object
required: [ type, features ]
additionalProperties: false
properties:
  type: { type: string,  enum: [ FeatureCollection ] }
  name: {type: string}
  description: {type: string}
  features:
    type: array
    items: { $ref: '#/definitions/Feature' }
  bbox: { $ref: '#/definitions/bbox' }
